directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

type User {
  id: ID!
  username: String!
  password: String!
  posts: [Post!]!
  comments: [CommentResponse!]!
}

type Post {
  id: ID!
  text: String!
  authorId: ID!
  author: User!
  comments: [CommentResponse!]!
  commentable: Boolean!
}

type Comment {
  id: ID!
  comment: String!
  authorId: ID!
  itemId: ID!
  author: User!
}


type CommentResponse {
  id: ID!
  comment: String!
  authorId: ID!
  postId: ID!
  parentCommentID: ID
  author: User!
  replies: [CommentResponse!]!
}

type Query {
  userByUsername(username: String!): User!
  users: [User!]!
  user(id: ID!): User
  posts: [Post!]!
  post(id: ID!): Post
  comments(limit: Int, offset: Int): [CommentResponse!]!
  comment(id: ID!): CommentResponse
}

type Mutation {
  loginUser(username: String!, password: String!): Token! @goField(forceResolver: true)
  registerUser(username: String!, password: String!): User!
  createPost(text: String!, commentable: Boolean!): Post!
  createComment(comment: String!, itemId: ID!): CommentResponse!
}

type Token {
  token: String!
}
